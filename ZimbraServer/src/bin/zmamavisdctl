#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 ("License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.zimbra.com/license
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is: Zimbra Collaboration Suite Server.
# 
# The Initial Developer of the Original Code is Zimbra, Inc.
# Portions created by Zimbra are Copyright (C) 2005, 2006 Zimbra, Inc.
# All Rights Reserved.
# 
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 

if [ x`whoami` != xzimbra ]; then
  echo Error: must be run as zimbra user
  exit 1
fi

source `dirname $0`/zmshutil || exit 1
zmsetvars \
  zimbra_home \
  zimbra_log_directory

platform=`/opt/zimbra/libexec/get_plat_tag.sh`
pidfile=${zimbra_home}/log/amavisd.pid

rewriteconfig() {
  /opt/zimbra/libexec/zmmtaconfig antispam > /dev/null 2>&1
}

getpid() {
  if [ -f $pidfile ]; then
    PID=`cat $pidfile`
  fi
}

checkrunning() {
  getpid
  if [ "x$PID" = "x" ]; then
    RUNNING=0
    if [ -f $pidfile ]; then
      rm -f $pidfile
    fi
  else
    kill -0 $PID 2> /dev/null
    if [ $? != 0 ]; then
      PID=""
      RUNNING=0
    else
      RUNNING=1
    fi
  fi
}


#
# Main
#
case "$1" in
  'start')
    checkrunning
    if [ $RUNNING = 1 ]; then
      echo "amavisd already running: pid $PID"
      exit 0
    else
      if [ ! -d /opt/zimbra/amavisd/quarantine ]; then
        mkdir /opt/zimbra/amavisd/quarantine
      fi
      if [ ! -d /opt/zimbra/amavisd/db ]; then
        mkdir /opt/zimbra/amavisd/db
      fi
      if [ ! -d /opt/zimbra/amavisd/tmp ]; then
        mkdir /opt/zimbra/amavisd/tmp
      else 
        find /opt/zimbra/amavisd/tmp -maxdepth 1 -type d -name 'amavis-*' -exec rm -rf {} \; > /dev/null 2>&1
      fi
      if [ ! -d /opt/zimbra/amavisd/var ]; then
        mkdir /opt/zimbra/amavisd/var
      fi
      if [ x$2 = "x" ]; then
        rewriteconfig
      fi
      if [ ! -f ${zimbra_home}/amavisd/.spamassassin/bayes_toks ]; then
        # Initial bayes seeding.
        cp -f ${zimbra_home}/amavisd/.spamassassin/init/* \
          ${zimbra_home}/amavisd/.spamassassin
        chmod 644 ${zimbra_home}/amavisd/.spamassassin/bayes*
      fi
      ${zimbra_home}/amavisd/sbin/amavisd -c \
        ${zimbra_home}/conf/amavisd.conf &
      for ((i=0; i < 6; i++)); do
        checkrunning
        if [ $RUNNING = 1 ]; then 
          break
        fi  
        sleep 5
      done
      if [ "x$PID" = "x" ]; then
        echo "Failed to start amavisd."
      else 
        echo "Started amavisd: pid $PID"
      fi 
    fi
  ;;

  'kill')
    $0 stop
  ;;

  'stop')
    checkrunning
    if [ $RUNNING = 0 ]; then
      echo "amavisd not running"
      exit 0
    else 
      echo -n "Killing amavisd with pid $PID"
      kill -TERM $PID 2> /dev/null
      for ((i=0; i < 300; i++)); do
        sleep 5
        kill -0 $PID 2> /dev/null
        if [ $? != 0 ]; then
          echo " done."
          exit 0
        fi
        echo -n "."
      done
      kill -TERM $PID 2> /dev/null
      if [ $? = 0 ]; then
        echo " failed to stop $PID"
        exit 1
      else 
        echo " done."
      fi
    fi
    exit 0
  ;;
    
  'restart')
    $0 stop
    $0 start
  ;;
  
  'status')
    checkrunning
    if [ $RUNNING = 0 ]; then
      exit 1
    else
      echo "amavisd running pid: $PID"
      exit 0
    fi
  ;;
    
  *)
    echo "Usage: $0 start|stop|kill|restart|status"
    exit 1
  ;;
esac
