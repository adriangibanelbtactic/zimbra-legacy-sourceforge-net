#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 ("License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.zimbra.com/license
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is: Zimbra Collaboration Suite Server.
# 
# The Initial Developer of the Original Code is Zimbra, Inc.
# Portions created by Zimbra are Copyright (C) 2004, 2005, 2006 Zimbra, Inc.
# All Rights Reserved.
# 
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 

source `dirname $0`/zmshutil || exit 1
zmsetvars mysql_directory mysql_pidfile mysql_mycnf

if [ ! -d ${mysql_directory} ]; then
  exit 0
fi
zmassert -d ${mysql_directory}
zmassert -x ${mysql_directory}/bin/mysqld_safe
zmassert -r ${mysql_mycnf}
zmassert -d `dirname ${mysql_pidfile}`

#
# Path to my.cnf
#
if [ -f ${mysql_pidfile} ]; then
  pid=`cat ${mysql_pidfile}`
fi

case "$1" in
  'start')
    # --defaults-file must be first argument
    if [ "x$pid" != "x" ]; then
      kill -0 $pid 2> /dev/null
      if [ $? = 0 ]; then
        echo "mysqld_safe already running with pid $pid"
        exit 1
      fi
    fi
    cd ${mysql_directory}; \
      ${mysql_directory}/bin/mysqld_safe \
      --defaults-file=${mysql_mycnf} \
      --ledir=${mysql_directory}/libexec &
    ;;
    
  'stop')
    if [ "x${pid}" = "x" ]; then
      echo "Error: no pid in '${mysql_pidfile}'"
      exit 0
    else
      echo -n "Killing mysqld with pid $pid "
      kill $pid
      # wait for mysqld pid file to be removed
      for ((i = 0; i < 30; i++)); do
        sleep 2;
        kill -0 $pid 2> /dev/null
        if [ $? != 0 ]; then
          rm -f ${mysql_pidfile}
          break
        fi
        kill $pid
        echo -n "."
      done 
      if [ -s ${mysql_pidfile} ]; then 
        echo " gave up waiting!"
        exit 1
      else
        echo " done."
      fi
    fi
    exit 0
    ;;
    
  'restart')
    $0 stop
    $0 start
    ;;

  'status')
    kill -0 $pid 2> /dev/null
    mysqlstatus=$?
    if [ $mysqlstatus = 0 ]; then
      echo "mysql is running with pid $pid"
    else
      echo "mysql is not running"
    fi
    exit $mysqlstatus
    ;;

  *)
    echo "Usage: $0 start|stop|restart"
    exit 1
    ;;
esac
