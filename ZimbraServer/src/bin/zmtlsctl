#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 ("License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.zimbra.com/license
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is: Zimbra Collaboration Suite Server.
# 
# The Initial Developer of the Original Code is Zimbra, Inc.
# Portions created by Zimbra are Copyright (C) 2005, 2006 Zimbra, Inc.
# All Rights Reserved.
# 
# Contributor(s):
# 
# ***** END LICENSE BLOCK *****
# 



if [ x`whoami` != "xzimbra" ]; then
  echo "$0 must be run as user zimbra"
  exit 1
fi

source `dirname $0`/zmshutil || exit 1
zmsetvars \
  zimbra_home \
  zimbra_server_hostname \
  zimbra_log_directory \
  zimbra_tmp_directory \
  zimbra_java_home \
  mailboxd_directory 
platform=`${zimbra_home}/libexec/get_plat_tag.sh 2> /dev/null` || exit 1
sasl_conf_directory=${zimbra_home}/cyrus-sasl/etc
if [ x"${mailboxd_directory}" = "${zimbra_home}/tomcat" ]; then
  mailboxd_server=tomcat
  mailboxd_conf_directory=${mailboxd_directory}/conf
else
  mailboxd_server=jetty
  mailboxd_conf_directory=${mailboxd_directory}/etc
fi
jetty_web_xml=${zimbra_home}/jetty/etc

MODE=$1
export JAVA_HOME=${zimbra_java_home}

if [ "x${zimbra_tmp_directory}" = "x" ]; then
  zimbra_tmp_directory=/tmp
fi

if [ ! -d ${zimbra_tmp_directory} ]; then
  mkdir -p ${zimbra_tmp_directory}
fi

if [ "x$zimbra_server_hostname" = "x" ]; then
  echo "ERROR: Unable to determine zmhostname"
  exit 1;
fi

${zimbra_home}/bin/zmprov -l gs ${zimbra_server_hostname} > /dev/null 2>&1
if [ $? != 0 ]; then
  echo "ERROR: problem reading config from ldap. Make sure ldap is running."
  exit 1
fi

if [ "x$MODE" = "x" ]; then
	MODE=`${zimbra_home}/bin/zmprov -l gs ${zimbra_server_hostname} 2> /dev/null | grep zimbraMailMode | sed -e 's/zimbraMailMode: //'`

	if [ "x$MODE" = "x" ]; then
		MODE="http"
	fi
	if [ "x$MODE" = "xboth" ]; then
		MODE="mixed"
	fi
else
	shift
fi

updateTomcatConfig() {

	if [ $MODE = "http" ]; then
		sed -e 's/\(.*HTTPSBEGIN\).*/\1/' -e 's/.*\(HTTPSEND.*\)/\1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			${mailboxd_conf_directory}/server.xml > \
			${zimbra_tmp_directory}/server.xml.$$
	else
		if [ $MODE = "https" ]; then
			sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
				-e 's/\(.*HTTPBEGIN\).*/\1/' -e 's/.*\(HTTPEND.*\)/\1/' \
				${mailboxd_conf_directory}/server.xml > \
				${zimbra_tmp_directory}/server.xml.$$
		else
			# MIXED - enable both
			sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
				-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
				${mailboxd_conf_directory}/server.xml > \
				${zimbra_tmp_directory}/server.xml.$$
		fi
	fi
	if [ -s ${zimbra_tmp_directory}/server.xml.$$ ]; then
		mv -f ${zimbra_tmp_directory}/server.xml.$$ \
      ${mailboxd_conf_directory}/server.xml
	fi
	sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>$MODE<\/env-entry-value><!-- PROTOCOL MODE -->/" \
		${mailboxd_directory}/webapps/zimbra/WEB-INF/web.xml > ${zimbra_tmp_directory}/web.xml.$$
  if [ -s ${zimbra_tmp_directory}/web.xml.$$ ]; then
	  mv -f ${zimbra_tmp_directory}/web.xml.$$ ${mailboxd_directory}/webapps/zimbra/WEB-INF/web.xml
  fi
	
}

updateJettyConfig() {
	if [ $MODE = "http" ]; then
		sed -e 's/\(.*HTTPSBEGIN\).*/\1/' -e 's/.*\(HTTPSEND.*\)/\1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			${mailboxd_conf_directory}/jetty.xml.in > \
			${zimbra_tmp_directory}/jetty.xml.$$
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbra.web.xml.in > \
			${zimbra_tmp_directory}/zimbra.web.xml.in
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbraAdmin.web.xml.in > \
			${zimbra_tmp_directory}/zimbraAdmin.web.xml.in
	elif [ $MODE = "https" ]; then
		sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1/' -e 's/.*\(HTTPEND.*\)/\1/' \
			${mailboxd_conf_directory}/jetty.xml.in > \
			${zimbra_tmp_directory}/jetty.xml.$$
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbra.web.xml.in > \
			${zimbra_tmp_directory}/zimbra.web.xml.in
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbraAdmin.web.xml.in > \
			${zimbra_tmp_directory}/zimbraAdmin.web.xml.in
	elif [ $MODE = "redirect" ]; then
		# redirect - enable both
		# Then enable the redirect block in web.xml
		sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			${mailboxd_conf_directory}/jetty.xml.in > \
			${zimbra_tmp_directory}/jetty.xml.$$
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1 -->/' -e 's/.*\(REDIRECTEND.*\)/<!-- \1/' \
			${jetty_web_xml}/zimbra.web.xml.in > \
			${zimbra_tmp_directory}/zimbra.web.xml.in.$$
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1 -->/' -e 's/.*\(REDIRECTEND.*\)/<!-- \1/' \
			${jetty_web_xml}/zimbraAdmin.web.xml.in > \
			${zimbra_tmp_directory}/zimbraAdmin.web.xml.in.$$
	else
		# MIXED - enable both
		sed -e 's/\(.*HTTPSBEGIN\).*/\1 -->/' -e 's/.*\(HTTPSEND.*\)/<!-- \1/' \
			-e 's/\(.*HTTPBEGIN\).*/\1 -->/' -e 's/.*\(HTTPEND.*\)/<!-- \1/' \
			${mailboxd_conf_directory}/jetty.xml.in > \
			${zimbra_tmp_directory}/jetty.xml.$$
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbra.web.xml.in > \
			${zimbra_tmp_directory}/zimbra.web.xml.in
		sed -e 's/\(.*REDIRECTBEGIN\).*/\1/' -e 's/.*\(REDIRECTEND.*\)/\1/' \
			${jetty_web_xml}/zimbraAdmin.web.xml.in > \
			${zimbra_tmp_directory}/zimbraAdmin.web.xml.in
	fi
	if [ -s ${zimbra_tmp_directory}/jetty.xml.$$ ]; then
		mv -f ${zimbra_tmp_directory}/jetty.xml.$$ \
      			${mailboxd_conf_directory}/jetty.xml.in
	fi
	if [ -s ${zimbra_tmp_directory}/zimbra.web.xml.in.$$ ]; then
		mv -f ${zimbra_tmp_directory}/zimbra.web.xml.in.$$ \
			${jetty_web_xml}/zimbra.web.xml.in
	fi
	if [ -s ${zimbra_tmp_directory}/zimbraAdmin.web.xml.in.$$ ]; then
		mv -f ${zimbra_tmp_directory}/zimbraAdmin.web.xml.in.$$ \
			${jetty_web_xml}/zimbraAdmin.web.xml.in
	fi
	if [ $MODE = "redirect" ]; then
		sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>https<\/env-entry-value><!-- PROTOCOL MODE -->/" \
			${mailboxd_conf_directory}/zimbra.web.xml.in > ${zimbra_tmp_directory}/web.xml.$$
        else
		sed -e "s/.*PROTOCOL MODE.*/<env-entry-value>$MODE<\/env-entry-value><!-- PROTOCOL MODE -->/" \
			${mailboxd_conf_directory}/zimbra.web.xml.in > ${zimbra_tmp_directory}/web.xml.$$
	fi
  if [ -s ${zimbra_tmp_directory}/web.xml.$$ ]; then
	  mv -f ${zimbra_tmp_directory}/web.xml.$$ ${mailboxd_conf_directory}/zimbra.web.xml.in
  fi
  ${zimbra_home}/libexec/zmmtaconfig webxml mailbox
}

updateSASLConfig() {
	if [ $MODE = "http" ]; then
		if [ -f ${sasl_conf_directory}/saslauthd.conf.in ]; then
			sed -e 's/^zimbra_url: https:/zimbra_url: http:/' \
				${sasl_conf_directory}/saslauthd.conf.in > \
				${zimbra_tmp_directory}/saslauthd.conf.in.$$
		fi
	else
		if [ -f ${sasl_conf_directory}/saslauthd.conf.in ]; then
			sed -e 's/^zimbra_url: http:/zimbra_url: https:/' \
				${sasl_conf_directory}/saslauthd.conf.in > \
				${zimbra_tmp_directory}/saslauthd.conf.in.$$
		fi
	fi
	if [ -s ${zimbra_tmp_directory}/saslauthd.conf.in.$$ ]; then
		mv -f ${zimbra_tmp_directory}/saslauthd.conf.in.$$ \
      ${sasl_conf_directory}/saslauthd.conf.in
	fi

}

updateLdap() {
	${zimbra_home}/bin/zmprov -l ms ${zimbra_server_hostname} zimbraMailMode $MODE
}

if [ x"${mailboxd_server}" = "xtomcat" ]; then
  updateTomcatConfig
else
  updateJettyConfig
fi
updateSASLConfig
updateLdap
