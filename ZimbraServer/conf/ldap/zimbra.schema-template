#
# Zimbra LDAP Schema
#
# DO NOT MODIFY - generated by AttributeManager.
# ${SCHEMA_VERSION_INFO}
#
# our root OID (http://www.iana.org/assignments/enterprise-numbers)
#
#  1.3.6.1.4.1.19348
#  1.3.6.1.4.1.19348.2      LDAP elements
#  1.3.6.1.4.1.19348.2.1    Attribute Types
#  1.3.6.1.4.1.19348.2.2    Object Classes
#
objectIdentifier ZimbraRoot 1.3.6.1.4.1.19348
objectIdentifier ZimbraLDAP ZimbraRoot:2

###########################################################################
# attribute group OIDs.  Eg: objectIdentifier ZimbraAttrType ZimbraLDAP:1
###########################################################################
${GROUP_OIDS}

###########################################################################
# attribute OIDs Eg: objectIdentifier zimbraId ZimbraAttrType:1
###########################################################################
${ATTRIBUTE_OIDS}

###########################################################################
# object class OIDs
###########################################################################
objectIdentifier ZimbraObjectClass ZimbraLDAP:2
objectIdentifier zimbraAccount ZimbraObjectClass:1
objectIdentifier zimbraCOS ZimbraObjectClass:3
objectIdentifier zimbraDomain ZimbraObjectClass:4
objectIdentifier zimbraSecurityGroup ZimbraObjectClass:5
objectIdentifier zimbraDistributionList ZimbraObjectClass:6
objectIdentifier zimbraMailRecipient ZimbraObjectClass:7
objectIdentifier zimbraServer ZimbraObjectClass:8
objectIdentifier zimbraGlobalConfig ZimbraObjectClass:9
objectIdentifier zimbraAlias ZimbraObjectClass:11
objectIdentifier zimbraMimeEntry ZimbraObjectClass:12
objectIdentifier zimbraObjectEntry ZimbraObjectClass:13
objectIdentifier zimbraTimeZone ZimbraObjectClass:14
objectIdentifier zimbraZimletEntry ZimbraObjectClass:15
objectIdentifier zimbraCalendarResource ZimbraObjectClass:16
objectIdentifier zimbraIdentity ZimbraObjectClass:17
objectIdentifier zimbraDataSource ZimbraObjectClass:18
objectIdentifier zimbraPop3DataSource ZimbraObjectClass:19

###########################################################################
# attribute definitions
#
# OID (the first arg) comes from the objectIdentifier defined above
#
# NAME should be the same as objectIdentifier
#
# DESC should be the description of the attribute
#
# EQUALITY is the rule to use when doing a search/compare for an
# attribute value.
#
# SUBSTR is the rule to use when doing a substring search (*foo*)
#
# SYNTAX is the syntax (i.e., type) of the attribute. We should
# probably stick to syntaxes:
#
#       1.3.6.1.4.1.1466.115.121.1.15 	  -> directoryString (UTF-8 string)
#       1.3.6.1.4.1.1466.115.121.1.26   -> IA5String (ASCII String)
#       1.3.6.1.4.1.1466.115.121.1.27   -> integer (Integer value)
#       1.3.6.1.4.1.1466.115.121.1.7    -> boolean (TRUE/FALSE)
#
# SINGLE-VALUE should be present if only one instance of this
# attribute is allowed within an entry.
#
# Eg:
# 
# attributetype ( zimbraAccountStatus
#	NAME ( 'zimbraAccountStatus' )
#	DESC 'account status (TODO: enumerate valid values here)'
#	EQUALITY caseIgnoreMatch
#	SUBSTR caseIgnoreSubstringsMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32} 
#	SINGLE-VALUE )
#
###########################################################################

# break glass in case of emergency
#
# A generic attr like this is probably seductive, but would probably cause
# too much pain long term...
#
#attributetype ( zimbraAttr
#	NAME ( 'zimbraAttr' )
#	DESC 'generic name=value attribute'
#	EQUALITY caseIgnoreMatch
#	SUBSTR caseIgnoreSubstringsMatch
#	SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32} )

#### From Microsoft Schema
attributetype ( 1.2.840.113556.1.2.146
		NAME ( 'company' )
		SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{512}
		EQUALITY caseIgnoreMatch
		SUBSTR caseIgnoreSubstringsMatch
		SINGLE-VALUE )


${ATTRIBUTE_DEFINITIONS}

###########################################################################
# object class definitions
#
# This is where to define the object classes. Object classes are used
# to define which attribute MAY (optional) or MUST (required) belong
# to an entry.
#
# classes can be AUXILIARY or STRUCTURAL. An entry in the directory
# must have one and only one structural class, but can have many
# AUXILIARY classes.
#
###########################################################################

# zimbraMailRecipient is used to represent entries in the directory
# that can receive mail. i.e., they have a visible external address, that
# gets expanded into one or more internal/external addresses.
objectclass ( zimbraMailRecipient
	NAME 'zimbraMailRecipient'
	DESC 'Account object'
	SUP top AUXILIARY
${CLASS_MEMBERS_MAILRECIPIENT})

# zimbraAccount extends zimbraMailRecipient. It represents a real
# account in the system (either admin or end-user) that can be logged
# into, etc.
#
# It is defined as AUXILIARY in case it needs to be mixed to an
# existing directory deployment.
#
# cn            - full name, common name
# co            - country friendly name
# company       - company (company name)
# displayName   - name to display in admin tool, outlook uses as well
#                 (cn is multi-valued)
# gn            - first name (given name)
# initials      - middle initial
# l             - city (locality)
# ou            - organizational unit
# physicalDeliveryOfficeName - office
# street        - street address
# postalCode    - zip code
# sn            - last name (sir name)
# st            - state
# telephoneNumber - phone
objectclass ( zimbraAccount 
	NAME 'zimbraAccount'
	DESC 'Account object'
	SUP zimbraMailRecipient AUXILIARY
${CLASS_MEMBERS_ACCOUNT})

# zimbraAlias is used to privision aliases
objectclass ( zimbraAlias
	NAME 'zimbraAlias'
	DESC 'An alias to another zimbra object'
	SUP top STRUCTURAL
${CLASS_MEMBERS_ALIAS})

# zimbraDistributionList represents a distribution/mailing list.  It
# inherits from zimbraMailRecipient.  Members (who can be
# internal/external) are represented as zimbraMailForwardingAddress
# attrs.
objectclass ( zimbraDistributionList 
	NAME 'zimbraDistributionList'
	DESC 'Distribution List object'
	SUP top STRUCTURAL
${CLASS_MEMBERS_DISTRIBUTIONLIST})

# zimbraCOS is the class of service object.  it should have attributes
# that are used as default values for accounts that belong to the COS
# and do not have the same attribute defined in the account directory
# entry.
objectclass ( zimbraCOS 
	NAME 'zimbraCOS'
	DESC 'Class of Service data'
	SUP top STRUCTURAL
${CLASS_MEMBERS_COS})

# zimbraGlobalConfig is the entry that holds all the global
# configuration attrs.
objectclass ( zimbraGlobalConfig
	NAME 'zimbraGlobalConfig'
	DESC 'global config'
	SUP top AUXILIARY
${CLASS_MEMBERS_GLOBALCONFIG})

# zimbraDomain is used to represent a domain in the directory. For
# example, if we created the foo.com domain, then the dc=foo,dc=com
# entry in LDAP would have an objectclass of zimbraDomain.
# domain-specific configuration information (if so-needed) could be
# added here.
objectclass ( zimbraDomain
	NAME 'zimbraDomain'
	DESC 'Domain object'
	SUP zimbraMailRecipient AUXILIARY	
${CLASS_MEMBERS_DOMAIN})

# zimbraSecurityGroup is used to represent a security group in the
# directory. Members of this group have a zimbraMemberOf attr with
# this group's zimbraId. If this group is a member of other groups,
# then it will have those group's zimbraIds in its own zimbraMemberOf
# list.
objectclass ( zimbraSecurityGroup
	NAME 'zimbraSecurityGroup'
	DESC 'Security Group'
	SUP top AUXILIARY
${CLASS_MEMBERS_SECURITYGROUP})

# zimbraServer is used to represent a defined server within a zimbra
# install.  server-specific configuration information will be added
# here. This includes information like which services should be
# running on a server, whether or not the server is normally a
# master/slave, etc.
objectclass ( zimbraServer
	NAME 'zimbraServer'
	DESC 'Server in the cluster'
	SUP top STRUCTURAL
${CLASS_MEMBERS_SERVER})
	
# zimbraMimeEntry is used to represent status about mime types
objectclass ( zimbraMimeEntry
	NAME 'zimbraMimeEntry'
	DESC 'MIME type info'
	SUP top STRUCTURAL
${CLASS_MEMBERS_MIMEENTRY})

# zimbraObjectEntry is used to represent status about object types
objectclass ( zimbraObjectEntry
	NAME 'zimbraObjectEntry'
	DESC 'Object type info'
	SUP top STRUCTURAL
${CLASS_MEMBERS_OBJECTENTRY})

# zimbraTimeZone is used to define a timezone with daylight savings
# time rules.  Used in calendar.
objectclass ( zimbraTimeZone
	NAME 'zimbraTimeZone'
	DESC 'Time Zone info'
	SUP top STRUCTURAL
${CLASS_MEMBERS_TIMEZONE})
 
# zimbraZimletEntry is used to represent Zimlets
objectclass ( zimbraZimletEntry
	NAME 'zimbraZimletEntry'
	DESC 'Zimlet info'
	SUP top STRUCTURAL
${CLASS_MEMBERS_ZIMLETENTRY})

# zimbraCalendarResource is used to represent a calendar resource This
# objectclass should be mixed in to a zimbraAccount entry.
objectclass ( zimbraCalendarResource
	NAME 'zimbraCalendarResource'
	DESC 'Calendar resource object'
	SUP top AUXILIARY
${CLASS_MEMBERS_CALENDARRESOURCE})

# zimbraIdentity is the account identity object, which stores information about
# Email "identities"
objectclass ( zimbraIdentity
        NAME 'zimbraIdentity'
        DESC 'Account Email Identity information'
        SUP top STRUCTURAL
${CLASS_MEMBERS_IDENTITY})

# zimbraDataSource is the base class for data source objects
objectclass ( zimbraDataSource
        NAME 'zimbraDataSource'
        DESC 'base class for data source objects'
        SUP top STRUCTURAL
${CLASS_MEMBERS_DATASOURCE})

# zimbraDataSource is the base class for pop3 data source objects
objectclass ( zimbraPop3DataSource
	NAME 'zimbraPop3DataSource'
	DESC 'Pop3 data source object'
	SUP zimbraDataSource STRUCTURAL
${CLASS_MEMBERS_POP3DATASOURCE})
